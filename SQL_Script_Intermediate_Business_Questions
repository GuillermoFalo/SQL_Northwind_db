-- 9.	Identify the top five customers based on the total number of orders placed.
-- From prior queries we found out that each client has only placed one order. Therefore we will analyze the customers per USD value of their Orders
Select O.OrderID, CustomerName Customer_Name, Country Customer_Country, round(sum(Quantity*Price),1) USD_Order_Value, O.OrderDate Order_Date
from Customers C
join Orders O on O.CustomerID = C.CustomerID
join OrderDetails OD on OD.OrderID = O.OrderID
join products P on P.ProductID = OD.ProductID
group by CustomerName
order by sum(quantity*price) DESC
limit 5;

-- 10.	Calculate the revenue generated by each product based on unit price and quantity sold.
select ProductName Product, C.CategoryName Category, Price, Quantity, sum(price*quantity) Revenue_Generated
from products P
join OrderDetails OD on OD.ProductID=P.ProductID
join Categories C on C.CategoryID = P.CategoryID
group by Product
;

-- 11.	Determine the top three best-selling products by total revenue.
select ProductName Product, C.CategoryName Category, Price, Quantity, sum(price*quantity) Revenue_Generated
from products P
join OrderDetails OD on OD.ProductID=P.ProductID
join Categories C on C.CategoryID = P.CategoryID
group by Product
order by Revenue_Generated Desc
limit 3;

-- 12. Who are our beverages providers
select CategoryName Category,SupplierName Supplier, Country,  ProductName Product
from Suppliers S
join products p ON P.SupplierID=s.SupplierID
join Categories c on c.CategoryID = p.CategoryID
where category = 'Beverages';

-- 13.	Identify customers who have not placed any orders yet.
select CustomerName as Customer
from Customers C
join Orders O ON O.CustomerID=C.CustomerID
WHERE O.OrderDate IS NULL;
-- We can confirm all customers registered in the database have placed at least one order


-- 14.	Determine the total number of products sold per category.
select ProductName Product, sum(quantity) Quantity_Sold
from Products P
join OrderDetails OD ON OD.ProductID = P.ProductID
GROUP BY Product
order by quantity_sold Desc;
-- 15.	Analyze which employees have managed the highest volume of orders 

Select E.FIRSTNAME || ' ' || E.LASTNAME AS Employee_Name, CAST(strftime('%Y', 'now') AS INTEGER) - CAST(strftime('%Y', BirthDate) AS INTEGER) 
        - (strftime('%m-%d', 'now') < strftime('%m-%d', BirthDate)) AS Age,
		count(orderid) Sales_per_Rep
from Employees E
join Orders O on O.EmployeeID = E.EmployeeID
group by FirstName
order by Sales_per_Rep desc;
-- 16.	List all orders that were shipped using a specific shipping company.
-- First we want to understand if a unique shipper does all the products within the same order or each product is shipped differently
select *, ShipperID
from OrderDetails od
join Orders o on o.OrderID= od.OrderID
order by OrderID;
-- Now we know the entire order is shipped by same company so we proceed to list all the orderid along their shipping company
Select o.orderid, ShipperName Shipping_Company
from Shippers s
join orders o on o.ShipperID=s.ShipperID;


-- 17.	Generate a summary of order quantities for each product in the current quarter.
-- Assuming we are in March of 1997
-- First we will build a summary of the orders for the current Quarter, sales rep, shipping company
select O.Orderid, O.OrderDate, E.FIRSTNAME || ' ' || E.LASTNAME AS Employee_Name, C.CustomerName Customer, S.ShipperName Shipping_Company, SUM(QUANTITY*PRICE) Order_Revenue
from Orders O
join Shippers S on S.ShipperID=O.ShipperID
join OrderDetails OD on OD.OrderID = O.OrderID
JOIN Products P ON P.ProductID=OD.ProductID
join Employees E on E.EmployeeID = O.EmployeeID
JOIN Customers c on c.CustomerID = O.CustomerID
where OrderDate >= '1997%'
group by o.orderid
order  by OrderDate desc;

-- Now we will get into a more detailed summary for each order and the prooducts as well as quantities
select O.Orderid, O.OrderDate, C.CustomerName Customer, ProductName Product, Quantity, Unit
from Orders O
join Shippers S on S.ShipperID=O.ShipperID
join OrderDetails OD on OD.OrderID = O.OrderID
JOIN Products P ON P.ProductID=OD.ProductID
join Employees E on E.EmployeeID = O.EmployeeID
JOIN Customers c on c.CustomerID = O.CustomerID
where OrderDate >= '1997%'
order  by OrderDate desc;
